{"id":"src/index.js","dependencies":[{"name":"/project/udemy-javascript-basic/package.json","includedInParent":true,"mtime":1662378854807}],"generated":{"js":"/**\n * 【const,let等の変数宣言】\n */\n//let val2 = \"let変数\";\n//console.log(val2);\n\n/*letは上書きが可能*/\n//val2 = \"let上書き\";\n//console.log(val2);\n\n/*letは再宣言不可*/\n//let val2 = \"let再宣言\";\n//console.log(val2);\n\n/* constは上書き、再宣言不可だがオブジェクト内のプロパティの変更は可能 */\n\n/** ========================================================== */\n\n/**\n * 【テンプレート文字列】\n */\n// const name = \"田中\";\n// const age = 28;\n// const message = `私の名前は${name}です。年齢は${age}です。`;\n// console.log(message);\n\n/** ========================================================== */\n\n/**\n * 【アロー関数】\n */\n///■■■従来の関数\n// function func1(str) {\n//   return str;\n// }\n\n/**下記のように関数を変数に格納もできる */\n// const func1 = function (str) {\n//   return str;\n// };\n// console.log(func1(\"func1です\"));\n//■■■アロー関数\n// const func2 = (str) => {\n//   return str;\n// };\n// console.log(func2(\"func2です\"));\n\n/** returnは省略が可能 */\n// const func3 = (str) => str;\n// console.log(func3(\"func3です\"));\n\n/** ========================================================== */\n\n/**\n * 【分割代入】\n */\n// const myProfile = {\n//   name: \"田中\",\n//   age: 28\n// };\n// const message1 = `名前は${myProfile.name}です。年齢は${myProfile.age}です。`;\n// console.log(message1);\n\n/** オブジェクトからプロパティを取り出すことができる */\n// const { name, age } = myProfile;\n// const message2 = `名前は${name}です。年齢は${age}です。`;\n// console.log(message2);\n\n/** 分割代入は配列にも使用できる */\n// const myProfile = [\"田中\", 38];\n\n/*受け取る側はオブジェクト、配列によって記号が違う\n *オブジェクト：{}、配列：[]（配列は順番に格納する） */\n// const [name, age] = myProfile;\n// const message3 = `名前は${name}です。年齢は${age}です。`;\n// console.log(message3);\n\n/** ========================================================== */\n\n/**\n * 【デフォルト値、引数など】\n */\n//const sayHello = (name = \"ゲスト\") => console.log(`こんにちは！${name}さん！`);\n//sayHello();\n\n/** ========================================================== */\n\n/**\n * 【スプレッド構文 ...】\n */\n//■■■配列の展開\n// const arr1 = [1, 2];\n// console.log(...arr1);\n\n/* 「...配列の変数」は、配列の中を順番に処理している */\n// const sumFunc = (num1, num2) => console.log(num1 + num2);\n\n/* 下記はどちらも同じ結果となる */\n// sumFunc(arr1[0], arr1[1]); //従来の方法\n// sumFunc(...arr1); //配列に対してスプレッド構文を使用した方法\n//■■■まとめる\n// const arr2 = [1, 2, 3, 4, 5];\n// const [num1, num2, ...arr3] = arr2;\n// console.log(arr3);\n\n/** 分割代入でスプレッド構文を使用するとそれ以降の値を配列でまとめてることができる */\n//■■■配列のコピー、結合\n// const arr4 = [10, 20];\n// const arr5 = [30, 40];\n//コピー\n// const arr6 = [...arr4];\n// console.log(arr6);\n//結合\n// const arr7 = [...arr4, ...arr5];\n// console.log(arr7);\n\n/** =で配列に格納した場合、格納後の変数の内容を変更すると参照元も変わってしまう */\n// const arr8 = arr4;\n// arr8[0] = 100;\n// console.log(arr8);\n// console.log(arr4);\n//上記のarr8とarr4はどちらも[0]の値が「100」に変わってしまっている\n\n/** ========================================================== */\n\n/**\n * 【mapやfilterを使った配列の処理】\n */\n\n/* 従来はfor文だったが今はmapやfilterを使用する*/\n// const nameArr = [\"田中\", \"山田\", \"加藤\"];\n//■■■mapの場合\n// const nameArr2 = nameArr.map((name) => {\n//   return name;\n// });\n// console.log(nameArr2);\n// nameArr.map((name) => console.log(name));\n//index番号を表示する場合（第1引数は配列の内容、第2引数はindex番号）\n// nameArr.map((name, index) => console.log(`${index + 1}番目は、${name}です。`));\n//■■■filterの場合（ある条件に一致する物だけ出力）\n// const numArr = [1, 2, 3, 4, 5];\n// const newNumArr = numArr.filter((num) => {\n//   return num % 2 === 1; // returnに条件式を記述する\n// });\n// console.log(newNumArr);\n//■■■実践編\n// const newNameArr = nameArr.map((name) => {\n//   if (name === \"山田\") {\n//     return name;\n//   } else {\n//     return `${name}さん`;\n//   }\n// });\n// console.log(newNameArr);\n\n/** ========================================================== */\n\n/**\n * 【論理演算子の本当の意味を知る || &&】\n */\n// || は左側がfalseなら右側を返す\nvar num = \"\";\nvar num2 = \"\";\nvar fee = num || \"金額が未設定です。\";\n/*\n下記if文は、左側「num」がfalseなら右側の「num2」の値を返す\nこの場合、num2の値が「fale」なら、「if(false){ ～ }」となり、if文内の処理は実行されない\n逆にnum2の値が「true」なら、「if(true){ ～ }」となりif文内の処理は実行する\n※num1が「true」の場合は、num1の値が出力されるので「if(true){ ～ }」となる\n*/\n\nif (num || num2) {//処理\n} //&& は左側がtrueなら右側を返す\n\n\nvar num3 = \"\";\nvar num4 = \"\";\nvar fee2 = num3 && \"何かが設定されました。\";\n/*\n下記if文は、左側「num」がtrueなら右側の「num4」の値を返す\nこの場合、num4の値が「fale」なら、「if(false){ ～ }」となり、if文内の処理は実行されない\n逆にnum4の値が「true」なら、「if(true){ ～ }」となりif文内の処理は実行する\n※num3が「false」の場合は、num1の値が出力されるので「if(false){ ～ }」となる\n*/\n\nif (num3 && num4) {//処理\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"src/index.js","original":{"line":1,"column":0}},{"generated":{"line":2,"column":0},"source":"src/index.js","original":{"line":2,"column":0}},{"generated":{"line":3,"column":0},"source":"src/index.js","original":{"line":3,"column":0}},{"generated":{"line":4,"column":0},"source":"src/index.js","original":{"line":5,"column":0}},{"generated":{"line":5,"column":0},"source":"src/index.js","original":{"line":6,"column":0}},{"generated":{"line":7,"column":0},"source":"src/index.js","original":{"line":8,"column":0}},{"generated":{"line":8,"column":0},"source":"src/index.js","original":{"line":9,"column":0}},{"generated":{"line":9,"column":0},"source":"src/index.js","original":{"line":10,"column":0}},{"generated":{"line":11,"column":0},"source":"src/index.js","original":{"line":12,"column":0}},{"generated":{"line":12,"column":0},"source":"src/index.js","original":{"line":13,"column":0}},{"generated":{"line":13,"column":0},"source":"src/index.js","original":{"line":14,"column":0}},{"generated":{"line":15,"column":0},"source":"src/index.js","original":{"line":16,"column":0}},{"generated":{"line":17,"column":0},"source":"src/index.js","original":{"line":18,"column":0}},{"generated":{"line":19,"column":0},"source":"src/index.js","original":{"line":19,"column":0}},{"generated":{"line":20,"column":0},"source":"src/index.js","original":{"line":20,"column":0}},{"generated":{"line":21,"column":0},"source":"src/index.js","original":{"line":21,"column":0}},{"generated":{"line":22,"column":0},"source":"src/index.js","original":{"line":22,"column":0}},{"generated":{"line":23,"column":0},"source":"src/index.js","original":{"line":23,"column":0}},{"generated":{"line":24,"column":0},"source":"src/index.js","original":{"line":25,"column":0}},{"generated":{"line":25,"column":0},"source":"src/index.js","original":{"line":26,"column":0}},{"generated":{"line":27,"column":0},"source":"src/index.js","original":{"line":28,"column":0}},{"generated":{"line":29,"column":0},"source":"src/index.js","original":{"line":29,"column":0}},{"generated":{"line":30,"column":0},"source":"src/index.js","original":{"line":30,"column":0}},{"generated":{"line":31,"column":0},"source":"src/index.js","original":{"line":31,"column":0}},{"generated":{"line":32,"column":0},"source":"src/index.js","original":{"line":32,"column":0}},{"generated":{"line":33,"column":0},"source":"src/index.js","original":{"line":33,"column":0}},{"generated":{"line":34,"column":0},"source":"src/index.js","original":{"line":34,"column":0}},{"generated":{"line":35,"column":0},"source":"src/index.js","original":{"line":35,"column":0}},{"generated":{"line":37,"column":0},"source":"src/index.js","original":{"line":37,"column":0}},{"generated":{"line":38,"column":0},"source":"src/index.js","original":{"line":38,"column":0}},{"generated":{"line":39,"column":0},"source":"src/index.js","original":{"line":39,"column":0}},{"generated":{"line":40,"column":0},"source":"src/index.js","original":{"line":40,"column":0}},{"generated":{"line":41,"column":0},"source":"src/index.js","original":{"line":41,"column":0}},{"generated":{"line":42,"column":0},"source":"src/index.js","original":{"line":43,"column":0}},{"generated":{"line":43,"column":0},"source":"src/index.js","original":{"line":44,"column":0}},{"generated":{"line":44,"column":0},"source":"src/index.js","original":{"line":45,"column":0}},{"generated":{"line":45,"column":0},"source":"src/index.js","original":{"line":46,"column":0}},{"generated":{"line":46,"column":0},"source":"src/index.js","original":{"line":47,"column":0}},{"generated":{"line":48,"column":0},"source":"src/index.js","original":{"line":49,"column":0}},{"generated":{"line":49,"column":0},"source":"src/index.js","original":{"line":50,"column":0}},{"generated":{"line":50,"column":0},"source":"src/index.js","original":{"line":51,"column":0}},{"generated":{"line":52,"column":0},"source":"src/index.js","original":{"line":53,"column":0}},{"generated":{"line":54,"column":0},"source":"src/index.js","original":{"line":54,"column":0}},{"generated":{"line":55,"column":0},"source":"src/index.js","original":{"line":55,"column":0}},{"generated":{"line":56,"column":0},"source":"src/index.js","original":{"line":56,"column":0}},{"generated":{"line":57,"column":0},"source":"src/index.js","original":{"line":57,"column":0}},{"generated":{"line":58,"column":0},"source":"src/index.js","original":{"line":58,"column":0}},{"generated":{"line":59,"column":0},"source":"src/index.js","original":{"line":59,"column":0}},{"generated":{"line":60,"column":0},"source":"src/index.js","original":{"line":60,"column":0}},{"generated":{"line":61,"column":0},"source":"src/index.js","original":{"line":62,"column":0}},{"generated":{"line":62,"column":0},"source":"src/index.js","original":{"line":63,"column":0}},{"generated":{"line":64,"column":0},"source":"src/index.js","original":{"line":65,"column":0}},{"generated":{"line":65,"column":0},"source":"src/index.js","original":{"line":66,"column":0}},{"generated":{"line":66,"column":0},"source":"src/index.js","original":{"line":67,"column":0}},{"generated":{"line":67,"column":0},"source":"src/index.js","original":{"line":68,"column":0}},{"generated":{"line":69,"column":0},"source":"src/index.js","original":{"line":70,"column":0}},{"generated":{"line":70,"column":0},"source":"src/index.js","original":{"line":71,"column":0}},{"generated":{"line":72,"column":0},"source":"src/index.js","original":{"line":73,"column":0}},{"generated":{"line":73,"column":0},"source":"src/index.js","original":{"line":74,"column":0}},{"generated":{"line":74,"column":0},"source":"src/index.js","original":{"line":75,"column":0}},{"generated":{"line":75,"column":0},"source":"src/index.js","original":{"line":77,"column":0}},{"generated":{"line":76,"column":0},"source":"src/index.js","original":{"line":78,"column":0}},{"generated":{"line":78,"column":0},"source":"src/index.js","original":{"line":80,"column":0}},{"generated":{"line":80,"column":0},"source":"src/index.js","original":{"line":81,"column":0}},{"generated":{"line":81,"column":0},"source":"src/index.js","original":{"line":82,"column":0}},{"generated":{"line":82,"column":0},"source":"src/index.js","original":{"line":83,"column":0}},{"generated":{"line":83,"column":0},"source":"src/index.js","original":{"line":84,"column":0}},{"generated":{"line":84,"column":0},"source":"src/index.js","original":{"line":85,"column":0}},{"generated":{"line":86,"column":0},"source":"src/index.js","original":{"line":87,"column":0}},{"generated":{"line":88,"column":0},"source":"src/index.js","original":{"line":88,"column":0}},{"generated":{"line":89,"column":0},"source":"src/index.js","original":{"line":89,"column":0}},{"generated":{"line":90,"column":0},"source":"src/index.js","original":{"line":90,"column":0}},{"generated":{"line":91,"column":0},"source":"src/index.js","original":{"line":91,"column":0}},{"generated":{"line":92,"column":0},"source":"src/index.js","original":{"line":92,"column":0}},{"generated":{"line":93,"column":0},"source":"src/index.js","original":{"line":93,"column":0}},{"generated":{"line":95,"column":0},"source":"src/index.js","original":{"line":94,"column":0}},{"generated":{"line":96,"column":0},"source":"src/index.js","original":{"line":96,"column":0}},{"generated":{"line":98,"column":0},"source":"src/index.js","original":{"line":97,"column":0}},{"generated":{"line":99,"column":0},"source":"src/index.js","original":{"line":98,"column":0}},{"generated":{"line":100,"column":0},"source":"src/index.js","original":{"line":99,"column":0}},{"generated":{"line":101,"column":0},"source":"src/index.js","original":{"line":101,"column":0}},{"generated":{"line":102,"column":0},"source":"src/index.js","original":{"line":102,"column":0}},{"generated":{"line":103,"column":0},"source":"src/index.js","original":{"line":103,"column":0}},{"generated":{"line":104,"column":0},"source":"src/index.js","original":{"line":104,"column":0}},{"generated":{"line":106,"column":0},"source":"src/index.js","original":{"line":105,"column":0}},{"generated":{"line":107,"column":0},"source":"src/index.js","original":{"line":107,"column":0}},{"generated":{"line":108,"column":0},"source":"src/index.js","original":{"line":108,"column":0}},{"generated":{"line":109,"column":0},"source":"src/index.js","original":{"line":109,"column":0}},{"generated":{"line":110,"column":0},"source":"src/index.js","original":{"line":111,"column":0}},{"generated":{"line":111,"column":0},"source":"src/index.js","original":{"line":112,"column":0}},{"generated":{"line":112,"column":0},"source":"src/index.js","original":{"line":113,"column":0}},{"generated":{"line":113,"column":0},"source":"src/index.js","original":{"line":115,"column":0}},{"generated":{"line":114,"column":0},"source":"src/index.js","original":{"line":116,"column":0}},{"generated":{"line":115,"column":0},"source":"src/index.js","original":{"line":117,"column":0}},{"generated":{"line":117,"column":0},"source":"src/index.js","original":{"line":119,"column":0}},{"generated":{"line":118,"column":0},"source":"src/index.js","original":{"line":120,"column":0}},{"generated":{"line":119,"column":0},"source":"src/index.js","original":{"line":121,"column":0}},{"generated":{"line":120,"column":0},"source":"src/index.js","original":{"line":122,"column":0}},{"generated":{"line":121,"column":0},"source":"src/index.js","original":{"line":123,"column":0}},{"generated":{"line":122,"column":0},"source":"src/index.js","original":{"line":124,"column":0}},{"generated":{"line":124,"column":0},"source":"src/index.js","original":{"line":126,"column":0}},{"generated":{"line":126,"column":0},"source":"src/index.js","original":{"line":127,"column":0}},{"generated":{"line":127,"column":0},"source":"src/index.js","original":{"line":128,"column":0}},{"generated":{"line":128,"column":0},"source":"src/index.js","original":{"line":129,"column":0}},{"generated":{"line":130,"column":0},"source":"src/index.js","original":{"line":130,"column":0}},{"generated":{"line":131,"column":0},"source":"src/index.js","original":{"line":131,"column":0}},{"generated":{"line":132,"column":0},"source":"src/index.js","original":{"line":133,"column":0}},{"generated":{"line":133,"column":0},"source":"src/index.js","original":{"line":134,"column":0}},{"generated":{"line":134,"column":0},"source":"src/index.js","original":{"line":135,"column":0}},{"generated":{"line":135,"column":0},"source":"src/index.js","original":{"line":136,"column":0}},{"generated":{"line":136,"column":0},"source":"src/index.js","original":{"line":137,"column":0}},{"generated":{"line":137,"column":0},"source":"src/index.js","original":{"line":139,"column":0}},{"generated":{"line":138,"column":0},"source":"src/index.js","original":{"line":140,"column":0}},{"generated":{"line":139,"column":0},"source":"src/index.js","original":{"line":141,"column":0}},{"generated":{"line":140,"column":0},"source":"src/index.js","original":{"line":143,"column":0}},{"generated":{"line":141,"column":0},"source":"src/index.js","original":{"line":144,"column":0}},{"generated":{"line":142,"column":0},"source":"src/index.js","original":{"line":145,"column":0}},{"generated":{"line":143,"column":0},"source":"src/index.js","original":{"line":146,"column":0}},{"generated":{"line":144,"column":0},"source":"src/index.js","original":{"line":147,"column":0}},{"generated":{"line":145,"column":0},"source":"src/index.js","original":{"line":148,"column":0}},{"generated":{"line":146,"column":0},"source":"src/index.js","original":{"line":150,"column":0}},{"generated":{"line":147,"column":0},"source":"src/index.js","original":{"line":151,"column":0}},{"generated":{"line":148,"column":0},"source":"src/index.js","original":{"line":152,"column":0}},{"generated":{"line":149,"column":0},"source":"src/index.js","original":{"line":153,"column":0}},{"generated":{"line":150,"column":0},"source":"src/index.js","original":{"line":154,"column":0}},{"generated":{"line":151,"column":0},"source":"src/index.js","original":{"line":155,"column":0}},{"generated":{"line":152,"column":0},"source":"src/index.js","original":{"line":156,"column":0}},{"generated":{"line":153,"column":0},"source":"src/index.js","original":{"line":157,"column":0}},{"generated":{"line":154,"column":0},"source":"src/index.js","original":{"line":158,"column":0}},{"generated":{"line":156,"column":0},"source":"src/index.js","original":{"line":160,"column":0}},{"generated":{"line":158,"column":0},"source":"src/index.js","original":{"line":161,"column":0}},{"generated":{"line":159,"column":0},"source":"src/index.js","original":{"line":162,"column":0}},{"generated":{"line":160,"column":0},"source":"src/index.js","original":{"line":163,"column":0}},{"generated":{"line":161,"column":0},"source":"src/index.js","original":{"line":164,"column":0}},{"generated":{"line":162,"column":0},"source":"src/index.js","original":{"line":165,"column":0}},{"generated":{"line":162,"column":4},"source":"src/index.js","original":{"line":165,"column":6},"name":"num"},{"generated":{"line":162,"column":7},"source":"src/index.js","original":{"line":165,"column":9}},{"generated":{"line":162,"column":10},"source":"src/index.js","original":{"line":165,"column":12}},{"generated":{"line":162,"column":12},"source":"src/index.js","original":{"line":165,"column":0}},{"generated":{"line":163,"column":0},"source":"src/index.js","original":{"line":166,"column":0}},{"generated":{"line":163,"column":4},"source":"src/index.js","original":{"line":166,"column":6},"name":"num2"},{"generated":{"line":163,"column":8},"source":"src/index.js","original":{"line":166,"column":10}},{"generated":{"line":163,"column":11},"source":"src/index.js","original":{"line":166,"column":13}},{"generated":{"line":163,"column":13},"source":"src/index.js","original":{"line":166,"column":0}},{"generated":{"line":164,"column":0},"source":"src/index.js","original":{"line":167,"column":0}},{"generated":{"line":164,"column":4},"source":"src/index.js","original":{"line":167,"column":6},"name":"fee"},{"generated":{"line":164,"column":7},"source":"src/index.js","original":{"line":167,"column":9}},{"generated":{"line":164,"column":10},"source":"src/index.js","original":{"line":167,"column":12},"name":"num"},{"generated":{"line":164,"column":13},"source":"src/index.js","original":{"line":167,"column":15}},{"generated":{"line":164,"column":17},"source":"src/index.js","original":{"line":167,"column":19}},{"generated":{"line":164,"column":28},"source":"src/index.js","original":{"line":167,"column":0}},{"generated":{"line":165,"column":0},"source":"src/index.js","original":{"line":169,"column":0}},{"generated":{"line":166,"column":0},"source":"src/index.js","original":{"line":170,"column":0}},{"generated":{"line":167,"column":0},"source":"src/index.js","original":{"line":171,"column":0}},{"generated":{"line":168,"column":0},"source":"src/index.js","original":{"line":172,"column":0}},{"generated":{"line":169,"column":0},"source":"src/index.js","original":{"line":173,"column":0}},{"generated":{"line":170,"column":0},"source":"src/index.js","original":{"line":174,"column":0}},{"generated":{"line":172,"column":0},"source":"src/index.js","original":{"line":175,"column":0}},{"generated":{"line":172,"column":4},"source":"src/index.js","original":{"line":175,"column":4},"name":"num"},{"generated":{"line":172,"column":7},"source":"src/index.js","original":{"line":175,"column":7}},{"generated":{"line":172,"column":11},"source":"src/index.js","original":{"line":175,"column":11},"name":"num2"},{"generated":{"line":172,"column":15},"source":"src/index.js","original":{"line":175,"column":0}},{"generated":{"line":172,"column":17},"source":"src/index.js","original":{"line":175,"column":17}},{"generated":{"line":172,"column":18},"source":"src/index.js","original":{"line":176,"column":2}},{"generated":{"line":173,"column":0},"source":"src/index.js","original":{"line":177,"column":1}},{"generated":{"line":173,"column":2},"source":"src/index.js","original":{"line":179,"column":0}},{"generated":{"line":176,"column":0},"source":"src/index.js","original":{"line":180,"column":0}},{"generated":{"line":176,"column":4},"source":"src/index.js","original":{"line":180,"column":6},"name":"num3"},{"generated":{"line":176,"column":8},"source":"src/index.js","original":{"line":180,"column":10}},{"generated":{"line":176,"column":11},"source":"src/index.js","original":{"line":180,"column":13}},{"generated":{"line":176,"column":13},"source":"src/index.js","original":{"line":180,"column":0}},{"generated":{"line":177,"column":0},"source":"src/index.js","original":{"line":181,"column":0}},{"generated":{"line":177,"column":4},"source":"src/index.js","original":{"line":181,"column":6},"name":"num4"},{"generated":{"line":177,"column":8},"source":"src/index.js","original":{"line":181,"column":10}},{"generated":{"line":177,"column":11},"source":"src/index.js","original":{"line":181,"column":13}},{"generated":{"line":177,"column":13},"source":"src/index.js","original":{"line":181,"column":0}},{"generated":{"line":178,"column":0},"source":"src/index.js","original":{"line":182,"column":0}},{"generated":{"line":178,"column":4},"source":"src/index.js","original":{"line":182,"column":6},"name":"fee2"},{"generated":{"line":178,"column":8},"source":"src/index.js","original":{"line":182,"column":10}},{"generated":{"line":178,"column":11},"source":"src/index.js","original":{"line":182,"column":13},"name":"num3"},{"generated":{"line":178,"column":15},"source":"src/index.js","original":{"line":182,"column":17}},{"generated":{"line":178,"column":19},"source":"src/index.js","original":{"line":182,"column":21}},{"generated":{"line":178,"column":32},"source":"src/index.js","original":{"line":182,"column":0}},{"generated":{"line":179,"column":0},"source":"src/index.js","original":{"line":184,"column":0}},{"generated":{"line":180,"column":0},"source":"src/index.js","original":{"line":185,"column":0}},{"generated":{"line":181,"column":0},"source":"src/index.js","original":{"line":186,"column":0}},{"generated":{"line":182,"column":0},"source":"src/index.js","original":{"line":187,"column":0}},{"generated":{"line":183,"column":0},"source":"src/index.js","original":{"line":188,"column":0}},{"generated":{"line":184,"column":0},"source":"src/index.js","original":{"line":189,"column":0}},{"generated":{"line":186,"column":0},"source":"src/index.js","original":{"line":190,"column":0}},{"generated":{"line":186,"column":4},"source":"src/index.js","original":{"line":190,"column":4},"name":"num3"},{"generated":{"line":186,"column":8},"source":"src/index.js","original":{"line":190,"column":8}},{"generated":{"line":186,"column":12},"source":"src/index.js","original":{"line":190,"column":12},"name":"num4"},{"generated":{"line":186,"column":16},"source":"src/index.js","original":{"line":190,"column":0}},{"generated":{"line":186,"column":18},"source":"src/index.js","original":{"line":190,"column":18}},{"generated":{"line":186,"column":19},"source":"src/index.js","original":{"line":191,"column":2}},{"generated":{"line":187,"column":0},"source":"src/index.js","original":{"line":192,"column":1}}],"sources":{"src/index.js":"/**\n * 【const,let等の変数宣言】\n */\n\n//let val2 = \"let変数\";\n//console.log(val2);\n\n/*letは上書きが可能*/\n//val2 = \"let上書き\";\n//console.log(val2);\n\n/*letは再宣言不可*/\n//let val2 = \"let再宣言\";\n//console.log(val2);\n\n/* constは上書き、再宣言不可だがオブジェクト内のプロパティの変更は可能 */\n\n/** ========================================================== */\n/**\n * 【テンプレート文字列】\n */\n// const name = \"田中\";\n// const age = 28;\n\n// const message = `私の名前は${name}です。年齢は${age}です。`;\n// console.log(message);\n\n/** ========================================================== */\n/**\n * 【アロー関数】\n */\n///■■■従来の関数\n// function func1(str) {\n//   return str;\n// }\n\n/**下記のように関数を変数に格納もできる */\n// const func1 = function (str) {\n//   return str;\n// };\n// console.log(func1(\"func1です\"));\n\n//■■■アロー関数\n// const func2 = (str) => {\n//   return str;\n// };\n// console.log(func2(\"func2です\"));\n\n/** returnは省略が可能 */\n// const func3 = (str) => str;\n// console.log(func3(\"func3です\"));\n\n/** ========================================================== */\n/**\n * 【分割代入】\n */\n// const myProfile = {\n//   name: \"田中\",\n//   age: 28\n// };\n\n// const message1 = `名前は${myProfile.name}です。年齢は${myProfile.age}です。`;\n// console.log(message1);\n\n/** オブジェクトからプロパティを取り出すことができる */\n// const { name, age } = myProfile;\n// const message2 = `名前は${name}です。年齢は${age}です。`;\n// console.log(message2);\n\n/** 分割代入は配列にも使用できる */\n// const myProfile = [\"田中\", 38];\n\n/*受け取る側はオブジェクト、配列によって記号が違う\n *オブジェクト：{}、配列：[]（配列は順番に格納する） */\n// const [name, age] = myProfile;\n\n// const message3 = `名前は${name}です。年齢は${age}です。`;\n// console.log(message3);\n\n/** ========================================================== */\n/**\n * 【デフォルト値、引数など】\n */\n//const sayHello = (name = \"ゲスト\") => console.log(`こんにちは！${name}さん！`);\n//sayHello();\n\n/** ========================================================== */\n/**\n * 【スプレッド構文 ...】\n */\n//■■■配列の展開\n// const arr1 = [1, 2];\n// console.log(...arr1);\n/* 「...配列の変数」は、配列の中を順番に処理している */\n\n// const sumFunc = (num1, num2) => console.log(num1 + num2);\n/* 下記はどちらも同じ結果となる */\n// sumFunc(arr1[0], arr1[1]); //従来の方法\n// sumFunc(...arr1); //配列に対してスプレッド構文を使用した方法\n\n//■■■まとめる\n// const arr2 = [1, 2, 3, 4, 5];\n// const [num1, num2, ...arr3] = arr2;\n// console.log(arr3);\n/** 分割代入でスプレッド構文を使用するとそれ以降の値を配列でまとめてることができる */\n\n//■■■配列のコピー、結合\n// const arr4 = [10, 20];\n// const arr5 = [30, 40];\n\n//コピー\n// const arr6 = [...arr4];\n// console.log(arr6);\n\n//結合\n// const arr7 = [...arr4, ...arr5];\n// console.log(arr7);\n\n/** =で配列に格納した場合、格納後の変数の内容を変更すると参照元も変わってしまう */\n// const arr8 = arr4;\n// arr8[0] = 100;\n// console.log(arr8);\n// console.log(arr4);\n//上記のarr8とarr4はどちらも[0]の値が「100」に変わってしまっている\n\n/** ========================================================== */\n/**\n * 【mapやfilterを使った配列の処理】\n */\n/* 従来はfor文だったが今はmapやfilterを使用する*/\n// const nameArr = [\"田中\", \"山田\", \"加藤\"];\n\n//■■■mapの場合\n// const nameArr2 = nameArr.map((name) => {\n//   return name;\n// });\n// console.log(nameArr2);\n\n// nameArr.map((name) => console.log(name));\n//index番号を表示する場合（第1引数は配列の内容、第2引数はindex番号）\n// nameArr.map((name, index) => console.log(`${index + 1}番目は、${name}です。`));\n\n//■■■filterの場合（ある条件に一致する物だけ出力）\n// const numArr = [1, 2, 3, 4, 5];\n// const newNumArr = numArr.filter((num) => {\n//   return num % 2 === 1; // returnに条件式を記述する\n// });\n// console.log(newNumArr);\n\n//■■■実践編\n// const newNameArr = nameArr.map((name) => {\n//   if (name === \"山田\") {\n//     return name;\n//   } else {\n//     return `${name}さん`;\n//   }\n// });\n// console.log(newNameArr);\n\n/** ========================================================== */\n/**\n * 【論理演算子の本当の意味を知る || &&】\n */\n// || は左側がfalseなら右側を返す\nconst num = \"\";\nconst num2 = \"\";\nconst fee = num || \"金額が未設定です。\";\n\n/*\n下記if文は、左側「num」がfalseなら右側の「num2」の値を返す\nこの場合、num2の値が「fale」なら、「if(false){ ～ }」となり、if文内の処理は実行されない\n逆にnum2の値が「true」なら、「if(true){ ～ }」となりif文内の処理は実行する\n※num1が「true」の場合は、num1の値が出力されるので「if(true){ ～ }」となる\n*/\nif (num || num2) {\n  //処理\n}\n\n//&& は左側がtrueなら右側を返す\nconst num3 = \"\";\nconst num4 = \"\";\nconst fee2 = num3 && \"何かが設定されました。\";\n\n/*\n下記if文は、左側「num」がtrueなら右側の「num4」の値を返す\nこの場合、num4の値が「fale」なら、「if(false){ ～ }」となり、if文内の処理は実行されない\n逆にnum4の値が「true」なら、「if(true){ ～ }」となりif文内の処理は実行する\n※num3が「false」の場合は、num1の値が出力されるので「if(false){ ～ }」となる\n*/\nif (num3 && num4) {\n  //処理\n}\n"},"lineCount":null}},"error":null,"hash":"7d59dee8497131eee4d5719abea2bb1f","cacheData":{"env":{}}}